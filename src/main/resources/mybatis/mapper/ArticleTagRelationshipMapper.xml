<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.puyangsky.blog.dao.ArticleTagRelationshipDao" >
    <resultMap id="TagResultMap" type="com.puyangsky.blog.model.Tag" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
    </resultMap>
    <resultMap id="ArticleResultMap" type="com.puyangsky.blog.model.Article" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="author" property="author" jdbcType="VARCHAR" />
        <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, name
    </sql>

    <select id="selectTagNamesByArticleId" resultMap="TagResultMap" parameterType="java.lang.Integer" >
        select
          t.id, t.name
        from tag as t
        where t.id in (
          select a.tag_id
          from article_tag_relationship as a
          where a.article_id = #{articleId, jdbcType=INTEGER}
        )
    </select>

    <select id="selectArticlesByTagName" resultMap="ArticleResultMap" parameterType="java.lang.String" >
        select
          a.id, a.title, a.content, a.author, a.publish_time
        from article as a
        where a.id in (
          select atr.article_id
          from article_tag_relationship as atr
          where atr.tag_id = (
          select t.id from tag as t where t.name = #{tagName, jdbcType=VARCHAR}
          )
        )
    </select>

    <delete id="deleteArticleTagRelationship" >
        delete from article_tag_relationship
        where article_id = #{articleId,jdbcType=INTEGER}
        and tag_id = #{tagId,jdbcType=INTEGER}
    </delete>

    <insert id="insertArticleTagRelationship" parameterType="com.puyangsky.blog.model.ArticleTagRelationship" >
        insert into article_tag_relationship (article_id, tag_id)
        values (#{articleId,jdbcType=INTEGER}, #{tagId,jdbcType=INTEGER})
    </insert>
    <!--<insert id="insertSelective" parameterType="com.xdd.entity.User" >-->
        <!--insert into user_t-->
        <!--<trim prefix="(" suffix=")" suffixOverrides="," >-->
            <!--<if test="id != null" >-->
                <!--id,-->
            <!--</if>-->
            <!--<if test="userName != null" >-->
                <!--user_name,-->
            <!--</if>-->
            <!--<if test="password != null" >-->
                <!--password,-->
            <!--</if>-->
            <!--<if test="age != null" >-->
                <!--age,-->
            <!--</if>-->
        <!--</trim>-->
        <!--<trim prefix="values (" suffix=")" suffixOverrides="," >-->
            <!--<if test="id != null" >-->
                <!--#{id,jdbcType=INTEGER},-->
            <!--</if>-->
            <!--<if test="userName != null" >-->
                <!--#{userName,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="password != null" >-->
                <!--#{password,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="age != null" >-->
                <!--#{age,jdbcType=INTEGER},-->
            <!--</if>-->
        <!--</trim>-->
    <!--</insert>-->
    <!--<update id="updateByPrimaryKeySelective" parameterType="com.xdd.entity.User" >-->
        <!--update user_t-->
        <!--<set >-->
            <!--<if test="userName != null" >-->
                <!--user_name = #{userName,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="password != null" >-->
                <!--password = #{password,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="age != null" >-->
                <!--age = #{age,jdbcType=INTEGER},-->
            <!--</if>-->
        <!--</set>-->
        <!--where id = #{id,jdbcType=INTEGER}-->
    <!--</update>-->
    <!--<update id="updateByPrimaryKey" parameterType="com.xdd.entity.User" >-->
        <!--update user_t-->
        <!--set user_name = #{userName,jdbcType=VARCHAR},-->
        <!--password = #{password,jdbcType=VARCHAR},-->
        <!--age = #{age,jdbcType=INTEGER}-->
        <!--where id = #{id,jdbcType=INTEGER}-->
    <!--</update>-->
</mapper>